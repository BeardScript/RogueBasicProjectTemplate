import { UIGroup } from './UIGroup';
import { WindowUIComponent } from './WindowUIComponent';
import { CSSProperties } from 'react';
import { IconDefinition } from '@fortawesome/fontawesome-svg-core';
import { UILabel } from './UILabel';
import { UIIcon } from './UIIcon';
export declare class UITreeNode extends WindowUIComponent {
    component: string;
    ui: UIGroup;
    label: string;
    draggable: boolean;
    childrenGroup: UIGroup;
    private _uilabel;
    private _uiItem;
    private _uiicon;
    private _exticon;
    private _expanded;
    private _selected;
    private _data;
    private _defaultColor;
    private _defaultBgColor;
    private _colorSelection;
    private _bgColorSelection;
    private _parent;
    isSelected: (node: UITreeNode) => boolean;
    onExpandNode: (node: UITreeNode) => void;
    onFoldNode: (node: UITreeNode) => void;
    constructor(label: string, ui?: UITreeNode[], config?: IUITreeNodeConfig);
    constructor(label: string, icon?: IconDefinition | string, ui?: UITreeNode[], config?: IUITreeNodeConfig);
    add(ui: UITreeNode): void;
    remove(ui: UITreeNode): void;
    toggleExpand(): void;
    hasIcon(): boolean;
    onSetUILabel(newUILabel?: UILabel, oldUILabel?: UILabel): void;
    expandParentNode(): void;
    private expandParentRecursive;
    readonly children: UITreeNode[];
    uiItem: UIGroup;
    uiicon: UIIcon;
    exticon: UIIcon;
    uilabel: UILabel;
    expanded: boolean;
    selected: boolean;
    data: any;
    colorSelection: string;
    bgColorSelection: string;
    defaultColor: string;
    defaultBgColor: string;
    parent: UITreeNode | undefined;
}
export declare type IUITreeNodeConfig = {
    style?: CSSProperties;
    labelStyle?: CSSProperties;
    iconStyle?: CSSProperties;
    draggable?: boolean;
    colorSelection?: string;
    bgColorSelection?: string;
    isExpanded: boolean;
};
